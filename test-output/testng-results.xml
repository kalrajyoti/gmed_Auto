<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="0" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Gmed_test_suite" duration-ms="79" started-at="2018-07-17T06:40:15Z" finished-at="2018-07-17T06:40:15Z">
    <groups>
      <group name="Demographics_Regression">
        <method signature="DemographicsTest.modifyPatient()[pri:1, instance:com.gmed.test.DemographicsTest@1efed156]" name="modifyPatient" class="com.gmed.test.DemographicsTest"/>
        <method signature="DemographicsTest.verifyPatientByAgeReport()[pri:2, instance:com.gmed.test.DemographicsTest@1efed156]" name="verifyPatientByAgeReport" class="com.gmed.test.DemographicsTest"/>
        <method signature="DemographicsTest.verifyPatientByZipCodeReport()[pri:3, instance:com.gmed.test.DemographicsTest@1efed156]" name="verifyPatientByZipCodeReport" class="com.gmed.test.DemographicsTest"/>
      </group> <!-- Demographics_Regression -->
    </groups>
    <test name="Base_Test" duration-ms="6" started-at="2018-07-17T06:40:15Z" finished-at="2018-07-17T06:40:15Z">
    </test> <!-- Base_Test -->
    <test name="DemographicsTest" duration-ms="44" started-at="2018-07-17T06:40:15Z" finished-at="2018-07-17T06:40:15Z">
      <class name="com.gmed.test.DemographicsTest">
        <test-method status="FAIL" signature="initBeforeSuite()[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="initBeforeSuite" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:06Z" finished-at="2018-07-17T12:10:06Z">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[Error retrieving window with handle current (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 17 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'NDI-LAP-668', ip: '172.20.10.143', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{browserAttachTimeout=0, ie.enableFullPageScreenshot=true, enablePersistentHover=false, ie.forceCreateProcessApi=false, ie.forceShellWindowsApi=false, pageLoadStrategy=normal, ignoreZoomSetting=true, ie.fileUploadDialogTimeout=3000, version=11, platform=WINDOWS, proxy={proxyType=}, nativeEvents=false, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=false, browserName=internet explorer, initialBrowserUrl=https://www.facebook.com/, javascriptEnabled=true, ignoreProtectedModeSettings=true, enableElementCacheCleanup=true, unexpectedAlertBehaviour=accept}]
Session ID: e0365f95-8cf3-4b1d-82ec-2e563dc91efe]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: Error retrieving window with handle current (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 17 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'NDI-LAP-668', ip: '172.20.10.143', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{browserAttachTimeout=0, ie.enableFullPageScreenshot=true, enablePersistentHover=false, ie.forceCreateProcessApi=false, ie.forceShellWindowsApi=false, pageLoadStrategy=normal, ignoreZoomSetting=true, ie.fileUploadDialogTimeout=3000, version=11, platform=WINDOWS, proxy={proxyType=}, nativeEvents=false, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=false, browserName=internet explorer, initialBrowserUrl=https://www.facebook.com/, javascriptEnabled=true, ignoreProtectedModeSettings=true, enableElementCacheCleanup=true, unexpectedAlertBehaviour=accept}]
Session ID: e0365f95-8cf3-4b1d-82ec-2e563dc91efe
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:945)
	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWindow.maximize(EventFiringWebDriver.java:644)
	at com.gmed.helper.DriverFactory.openURL(DriverFactory.java:116)
	at com.gmed.base.BaseTestClass.initBeforeSuite(BaseTestClass.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:298)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBeforeSuite -->
        <test-method status="SKIP" signature="initClass()[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="initClass" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initClass -->
        <test-method status="SKIP" signature="init(java.lang.reflect.Method, java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="init" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="modifyPatient()[pri:1, instance:com.gmed.test.DemographicsTest@1efed156]" name="modifyPatient" duration-ms="2" started-at="2018-07-17T12:10:15Z" description="To verify that user can modify demographic details ,Insurance and Guarantor information in Demographics " finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modifyPatient -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult, java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="init(java.lang.reflect.Method, java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="init" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="verifyPatientByAgeReport()[pri:2, instance:com.gmed.test.DemographicsTest@1efed156]" name="verifyPatientByAgeReport" duration-ms="1" started-at="2018-07-17T12:10:15Z" description="To verify that patient by age Report for demographics Module " finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPatientByAgeReport -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult, java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="init(java.lang.reflect.Method, java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="init" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="verifyPatientByZipCodeReport()[pri:3, instance:com.gmed.test.DemographicsTest@1efed156]" name="verifyPatientByZipCodeReport" duration-ms="1" started-at="2018-07-17T12:10:15Z" description="To verify that patient by Zip Address Report for demographics Module " finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPatientByZipCodeReport -->
        <test-method status="SKIP" signature="afterEachTest(org.testng.ITestResult, java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="afterEachTest" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="SKIP" signature="classTearDown()[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="classTearDown" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classTearDown -->
        <test-method status="SKIP" signature="cleanupSuite(java.lang.String)[pri:0, instance:com.gmed.test.DemographicsTest@1efed156]" name="cleanupSuite" is-config="true" duration-ms="0" started-at="2018-07-17T12:10:15Z" finished-at="2018-07-17T12:10:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupSuite -->
      </class> <!-- com.gmed.test.DemographicsTest -->
    </test> <!-- DemographicsTest -->
  </suite> <!-- Gmed_test_suite -->
</testng-results>
